we have model Product(id: Int, name: String, price: Int, description: String)
we have list products from server
we have list products from cache (local database)

task sources:
- RemoteProductsService.kt, получить список продуктов с удаленного сервера
    -api:
        get(): Single<List<ProductRemoteData>>
- LocalProductsService.kt, get list products from cache (локальная бд)
    -api:
        get(): Single<List<ProductLocalData>>

task repository:
- GetListProductsRepository.kt, get list products
    -api:
        getListProducts(): Single<List<Product>> - merge 2 flow from sources in one flow

task use-cases:
- GetListProductsUseCase.kt, return list products to group by non-food, food
    -api:
       getSortedProductsPriceComparator.up(): List<Product> - get sorted list to price from min to max
       getSortedProductsNameComparator.up(): List<Product> - get sorted list to name from a to z
       getProductsFilterPrice.filterUp(minPrice: Int, maxPrice): List<Product> - get products with filter price from min to max

task presenter:
- Presenter.kt, used use-cases for get list products
    api:
        getSortedPriceUpProducts(): List<Product>
        getSortedNameUpProducts(): List<Product>
        getProductsFilterPriceUp(): List<Product>
